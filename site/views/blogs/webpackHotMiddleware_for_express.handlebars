<div class="blog-content">

    <p>Hot loading is one of the best advantages of webpack, it avoids the need of recompiling after each small change.
    webpack-hot-middleware integrates well with express and is perfect for developing with ReactJS.</p>

    <strong>Dependencies</strong>
    <p>Assuming you already have webpack and a webpack.config.js file set up, the only dependencies
    needed are webpack-dev-middleware and webpack-hot-middleware. Install them with the following commands</p>

    <pre>npm install webpack-dev-middleware
npm install webpack-hot-middleware</pre>

    <strong>Changing the webpack.config.js file</strong>
    <p>There are two simple changes to make in the webpack config file</p>
    <p>
        First, add <code>webpack-hot-middleware/client</code> before the file you are compiling
        in the <code>entry</code> field of the config file. So <code>entry</code> should look like this:
    </p>
    <pre>entry: [
    'webpack-hot-middleware/client',
    './app.js'
],</pre>
    <p>
        Second, we need to add a plugin for hot loading, so in the <code>plugins</code>
        field add the following line
    </p>
    <pre>new webpack.HotModuleReplacementPlugin()</pre>
    <p>
        The author of webpack-hot-middleware has an awesome example of the config
        <a href="https://github.com/glenjamin/ultimate-hot-reloading-example/blob/master/webpack.config.js">here</a> to check out
    </p>

    <strong>Changing the index.js file (or wherever express is)</strong>
    <p>
        To add the middleware to express, we first need to load some dependencies.
        Add the following lines at the top of your <code>index.js</code> file
    </p>
    <pre>var webpack = require('webpack');
var config = require('./webpack.config');
var compiler = webpack(config);</pre>
    <p>
        Now for the important part, adding in the actual middleware. Express will use webpack-dev-middleware and
        webpack-hot-middleware to serve the hot loaded files on the same port which it is listening on.
        Add the following lines before app.listen() is called or where you load other middleware.
    </p>
    <pre>app.use(require("webpack-dev-middleware")(compiler, {
    noInfo: true, publicPath: config.output.publicPath
}));
app.use(require("webpack-hot-middleware")(compiler));</pre>

    <strong>Conclusion</strong>
    <p>
        And that's it for set up. You can now run <code>node index.js</code> and you should
        see the compiled files being recompiled on any save.
    </p>
    <p>
        It's important to note that hot loading should only be run in development. So to ensure that, I would
        recommend having separate config files and checking for environment in index.js
    </p>

</div>